@model DeliveryManagement.Models.OrderItem

@{
    ViewBag.Title = "Thông tin sản phẩm";
    Layout = "~/Areas/StationStaffs/Views/Shared/_CommonLayout.cshtml";
}

<!-- ViewBag.Error -->
@if (ViewBag.Error != null || TempData["Error"] != null)
{
    <div class="form-group alert alert-danger alert-dismissible fade show alertFront" role="alert">
        <i class="fa fa-exclamation-circle"></i>
        @ViewBag.Error @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="row">
    <h5>Chi tiết hàng hóa</h5>
    <div class="col-lg-8">
        <div class="card mb-4>" style="padding:1%;">
            @using (Html.BeginForm("Items", "OrdersManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    @Html.AntiForgeryToken()

                    @if (TempData["Success"] != null)
                    {
                        <div class="form-group alert alert-success alert-dismissible fade show alertFront" role="alert">
                            <i class="far fa-check-circle"></i>
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.ItemID)
                    @Html.HiddenFor(model => model.OrderID)
                    <input class="form-control text-box single-line" data-val="true" data-val-number="The field Giá trị hàng hóa must be a number."
                           data-val-range="Phải nhập số lớn hơn 0" data-val-range-max="1.79769313486232E+308" data-val-range-min="0"
                           id="OrderPrice" name="OrderPrice" type="hidden" value="@Model.Order.OrderPrice">

                    <div class="row">
                        <div class="col-lg-5">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-11">
                                    @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-11">
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-11">
                                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <br />
                                    <input type="submit" value="Thêm" class="btn btn-outline-success" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <br />
                            <div style="position: fixed; bottom: 10%; right:2%; z-index:1000;">
                                <input type="submit" value="Tiếp theo &#10148;" formaction="@Url.Action("CaculateCost", "OrdersManagement")" class="btn btn-outline-success inlineBl" />
                                @if (!Model.Order.OnDelivering)
                                {
                                    <button type="button" class="btn btn-outline-danger inlineBl">
                                        @Html.ActionLink("Hủy và xóa đơn", "CancelRegister", new { id = Model.OrderID.Trim() }) &#10008;
                                    </button>
                                }
                                <button type="button" class="btn btn-outline-info inlineBl">
                                    @Html.ActionLink("Quay lại", "OrderRegistration", new { id = Model.OrderID.Trim() }) &#10554;
                                </button>
                            </div>

                        </div>
                    </div>
                </div>
            }
            <br />
            <h6>Danh sách sản phẩm</h6>
            @{
                Html.RenderAction("_ListOrderItem", "OrderItems", new { orderId = Model.OrderID.Trim(), isDetails = false });
            }
        </div>
    </div>
    <div class="col-lg-4">
        <div class="card mb-4>" style="padding:1%;">
            <h6>Thông tin đơn hàng</h6>
            <br />
            <table>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.Order.TotalWeight)</td>
                    <th>@Html.DisplayFor(model => model.Order.TotalWeight)</th>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.Order.OrderPrice)</td>
                    <td>
                        @Html.EditorFor(model => model.Order.OrderPrice, new { htmlAttributes = new { @class = "form-control", @oninput = "updateHiddenOP(this.value)" } })
                        <span class="field-validation-valid text-danger" data-valmsg-for="OrderPrice" data-valmsg-replace="true"></span>
                    </td>
                </tr>
            </table>
            <!--Old button location-->
            <!-- ... -->
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
