@model DeliveryManagement.Models.Package_Order

@{
    ViewBag.Title = "Đóng gói " + Model.PackageID;
    Layout = "~/Areas/StationStaffs/Views/Shared/_CommonLayout.cshtml";
}

<!-- Message to View -->
@if (TempData["Error"] != null)
{
    <div class="form-group alert alert-danger alert-dismissible fade show alertFront" role="alert">
        <i class="fa fa-exclamation-circle"></i>
        @ViewBag.Error @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <audio id="NotificationAudio" src="~/Areas/StationStaffs/Common/Audio/e-oh.mp3" autostart="false" preload="auto"></audio>
}
@if (TempData["Success"] != null)
{
    <div class="form-group alert alert-success alert-dismissible fade show alertFront" role="alert">
        <i class="far fa-check-circle"></i>
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <audio id="NotificationAudio" src="~/Areas/StationStaffs/Common/Audio/succesful.mp3" autostart="false" preload="auto"></audio>
}
@if (TempData["Warning"] != null)
{
    <div class="form-group alert alert-warning alert-dismissible fade show alertFront" role="alert">
        <i class="far fa-check-circle"></i>
        @TempData["Warning"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<script>
    window.onload = function () {
        var audioElement = document.getElementById("NotificationAudio");
        if (audioElement != null) {
            audioElement.play();
        }
    }
</script>

<h2>Đóng gói @Model.PackageID</h2>

@{
    Html.RenderAction("_ShortPackageDetails", "Packages", new { packageId = Model.PackageID });
}

<br />
@if (ViewBag.IsPacked)
{
    using (Html.BeginForm("ReopenPackage", "Packages", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.PackageID)
        <div class="row">
            <div class="col-md-6">
                <input type="submit" formaction="@Url.Action("PrintPackageBill", "Packages")" value="In phiếu &#128424; " class="btn btn-outline-warning" />
            </div>
            <div class="col-md-6">
                <input type="submit" value="Mở lại" class="btn btn-warning float-end" />
            </div>
        </div>
    }
}
else
{
    using (Html.BeginForm("Packing", "Packages", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PackageID)
            @Html.HiddenFor(model => model.AddTime)
            @Html.ValidationMessageFor(model => model.AddTime, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.OrderID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mã đơn", @autofocus = "autofocus", @onfocus = "select()" } })
                        @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-8"><input type="submit" value="Thêm &#10133; " class="btn btn-outline-success" /></div>
                            <div class="col-md-4">
                                @if (ViewBag.NumberOfOrder > 0)
                                {
                                    <input type="submit" value="Hoàn thành" formaction="@Url.Action("CompletePackage", "Packages")" class="btn btn-warning float-end" />
                                }
                                else
                                {
                                    <input type="submit" value="Hoàn thành" formaction="@Url.Action("CompletePackage", "Packages")" class="btn btn-outline-warning float-end" disabled />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}



<hr />
@{
    Html.RenderAction("_ListOrderInPackage", "PackageItems", new { packageId = Model.PackageID, isDetails = (bool)ViewBag.IsPacked });
}
