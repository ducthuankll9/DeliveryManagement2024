@model DeliveryManagement.Models.Staff

@{
    ViewBag.Title = "Thêm NV";
    //Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLightLayout.cshtml";
}

<!-- ViewBag.Error -->
@if (ViewBag.Error != null)
{
    <div class="form-group alert alert-danger alert-dismissible fade show alertFront" role="alert">
        <i class="fa fa-exclamation-circle"></i>
        @ViewBag.Error
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2>Thêm nhân viên mới</h2>

@using (Html.BeginForm("Create", "Staffs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.StaffID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inlineBl col-md-11">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <button type="button" class="btn" onclick="showPassword()">
                    <i id="eyeIcon" class="fa fa-eye-slash"></i>
                </button>
            </div>
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-5 inlineBl">
                @Html.LabelFor(model => model.Male, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-11">
                    <div class="form-control borderW" >
                        @Html.RadioButtonFor(model => model.Male, "true", new { @id = "maleRadioBtn" })
                        <label for="maleRadioBtn">Nam</label>
                        @Html.RadioButtonFor(model => model.Male, "false", new { @id = "femaleRadioBtn", @style = "margin-left:10%;" })
                        <label for="femaleRadioBtn">Nữ</label>

                    </div>
                </div>
            </div>
            <div class="col-md-5 inlineBl">
                @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-11">
                    <input type="date" id="Birthday" name="Birthday" class="form-control" value="2000-01-01" />
                </div>
            </div>

            <div class="col-md-5 inlineBl">
                <!--put Validation Message For Male here--> <!--but not used-->
            </div>
            <div class="col-md-5 inlineBl">
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StationID", null, htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.StationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <br />
                <input type="submit" value="Thêm" class="btn btn-outline-success" />
                <button type="button" class="btn btn-outline-info">
                    @Html.ActionLink("Quay lại", "Index")
                </button>
            </div>
        </div>
    </div>
}

<script>
    function showPassword() {
        var eye = document.getElementById('eyeIcon');
        var iType = document.getElementById('Password').getAttribute("type");
        if (iType == "password") {
            document.getElementById('Password').setAttribute('type', 'text');
            eye.classList.remove('fa-eye-slash');
            eye.classList.add('fa-eye');
        } else {
            document.getElementById('Password').setAttribute('type', 'password');
            eye.classList.remove('fa-eye');
            eye.classList.add('fa-eye-slash');
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}